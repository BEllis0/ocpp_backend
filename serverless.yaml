service: ocpp-backend

plugins:
  - serverless-dynamodb-local
  - serverless-plugin-typescript
  - serverless-prune-plugin
  - serverless-offline

custom:
  connectionTable: 'connections'
  # dynamodb:
  #   start:
  #     inMemory: true
  #     migrate: true
  #     dbPath: "./.dynamodb"
  #   installPath: ./.dynamodb
  #   stages:
  #     - dev
  serverless-offline:
    websocketPort: 3001
    httpPort: 3002
    # lambdaPort: 3008
    noPrependStageInUrl: true

provider:
  name: aws
  runtime: nodejs14.x
  stage: dev
  region: us-west-2
  websocketsApiName: ocpp-websocket
  websocketsDescription: OCPP-J Websocket Server
  # timeout: 30
  environment:
    CONNECTION_TABLE: ${self:custom.connectionTable}
  logs:
    websocket: true
  iam:
    role:
      statements: # permissions for all of your functions can be set here
      - Effect: Allow
        Action: # Gives permission to DynamoDB tables in a specific region
        - cloudwatch:PutMetricData
        - dynamodb:*
        - s3:*
        Resource: '*'

functions:
  connectionHandler:
    handler: src/handlers/connection.handler
    events:
      - websocket:
          route: $connect
      # - websocket:
      #     route: $disconnect
          # authorizer: auth
  messageHandler:
    handler: src/handlers/message.handler
    events:
      - websocket:
          route: $default
        # routeResponseSelectionExpression: "request.body.action"
  disconnectionHandler:
    handler: src/handlers/disconnect.handler
    events:
      - websocket:
          route: $disconnect
  
resources:
  Resources:
    ConnectionTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.connectionTable}
        AttributeDefinitions:
          - AttributeName: connectionId
            AttributeType: S
        KeySchema:
          - AttributeName: connectionId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 10
          WriteCapacityUnits: 10
